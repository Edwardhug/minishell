
char	**env_lst_into_double_char(t_env *env)
{
	int		i;
	char	**char_env;
	t_env	*tmp;
	int		size_node;

	i = 0;
	tmp = env;
	char_env = malloc(sizeof(char **) * (t_env_strlen(tmp) + 1));
	if (!char_env)
		return (perror("malloc"), NULL);
	while (tmp)
	{
		size_node = ft_strlen(tmp->name) + ft_strlen(tmp->value) + 2; // +2 pour le '=' et le caractère nul
		char *temp = ft_strjoin(tmp->name, "="); // Alloue et construit la première partie
		char_env[i] = ft_strjoin(temp, tmp->value); // Alloue et construit la deuxième partie
		free(temp); // Libère la mémoire allouée pour la première partie
		if (!char_env[i])
			return (perror("malloc"), free_tab(char_env), NULL);
		tmp = tmp->next;
		i++;
	}
	char_env[i] = NULL;
	return (char_env);
}
